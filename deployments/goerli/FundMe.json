{
  "address": "0x23CDD019351AA329f7E5eDa63CCbA951Cc041198",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xff7f8be51fd4c47aba0c0acd37dbd12bcbdc0e09b04a845ca3d0e712ea8f1b16",
  "receipt": {
    "to": null,
    "from": "0x6F56be06ceBad6bC60b48536E0deC66CF425120b",
    "contractAddress": "0x23CDD019351AA329f7E5eDa63CCbA951Cc041198",
    "transactionIndex": 53,
    "gasUsed": "1013118",
    "logsBloom": "0x
    "blockHash": "0x76b665aa658c1d20a0f496dfa2230e7e1a0dcc0a3d878bc684e0aa7bf071cfec",
    "transactionHash": "0xff7f8be51fd4c47aba0c0acd37dbd12bcbdc0e09b04a845ca3d0e712ea8f1b16",
    "logs": [],
    "blockNumber": 7672330,
    "cumulativeGasUsed": "19878679",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 4,
  "solcInputHash": "6b81e8c6db51707fb5c12e46e218ed27",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"RR Mendoza\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowdfunding\\n *  @author RR Mendoza\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; // 1 * 10 ** 18\\n    address private immutable i_owner;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, FundMe__NotOwner());\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // What happens if someone sends this contract ETH without calling the fund function?\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    /**\\n     *  @notice This function funds this contract\\n     *  @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        // 1. How do we send ETH to this contract?\\n        // require(msg.value > 1e18, \\\"Didn't send enough\\\"); // 1e18 == 1 * 10 ** 18 == 1000000000000000000\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n        // What is reverting?\\n        // undo any action before, and send remaining gas\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        s_funders = new address[](0);\\n\\n        // actually withdraw the funds\\n\\n        // transfer\\n        // msg.sender = address\\n        // payable(msg.sender) = payable address\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n\\n        // call\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xfb56f463e4e19f2882b94d1d9489e50f00b1eb37f3310b4984ae0e50c250a7fa\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // ABI\\n        // Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.00000000\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // 3000_00000000000000000 = ETH / USD price\\n        // 1_000000000000000000 ETH\\n\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        // 3000\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x9476db5828b07bb9ef38b794ff64cdfdeec2967cd6c68f1f212c5f5253da4cce\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012833803806200128383398181016040528101906200003791906200011f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000151565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b600060208284031215620001385762000137620000b5565b5b6000620001488482850162000108565b91505092915050565b60805160601c6110f76200018c600039600081816101e40152818161037801528181610454015281816105ca01526107c101526110f76000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a85565b610199565b6040516100b49190610acb565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610443565b6040516100e99190610acb565b60405180910390f35b3480156100fe57600080fd5b50610107610450565b6040516101149190610af5565b60405180910390f35b34801561012957600080fd5b50610132610478565b60405161013f9190610b6f565b60405180910390f35b6101506104a1565b005b61015a6105c8565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bb6565b610857565b6040516101909190610af5565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103135760006001828154811061028d5761028c610be3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030b90610c41565b91505061026a565b50600067ffffffffffffffff81111561032f5761032e610c8a565b5b60405190808252806020026020018201604052801561035d5781602001602082028036833780820191505090505b506001908051906020019061037392919061097b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103ba90610cea565b60006040518083038185875af1925050503d80600081146103f7576040519150601f19603f3d011682016040523d82523d6000602084013e6103fc565b606091505b5050905080610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790610d5c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104de60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089f90919063ffffffff16565b101561051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610dc8565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610687575b5050505050905060005b815181101561075c5760008282815181106106f9576106f8610be3565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075490610c41565b9150506106db565b50600067ffffffffffffffff81111561077857610777610c8a565b5b6040519080825280602002602001820160405280156107a65781602001602082028036833780820191505090505b50600190805190602001906107bc92919061097b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080390610cea565b60006040518083038185875af1925050503d8060008114610840576040519150601f19603f3d011682016040523d82523d6000602084013e610845565b606091505b505090508061085357600080fd5b5050565b60006001828154811061086d5761086c610be3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ab836108db565b90506000670de0b6b3a764000085836108c49190610de8565b6108ce9190610e71565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092457600080fd5b505afa158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190610f2f565b5050509150506402540be400816109739190610faa565b915050919050565b8280548282559060005260206000209081019282156109f4579160200282015b828111156109f35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099b565b5b509050610a019190610a05565b5090565b5b80821115610a1e576000816000905550600101610a06565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5282610a27565b9050919050565b610a6281610a47565b8114610a6d57600080fd5b50565b600081359050610a7f81610a59565b92915050565b600060208284031215610a9b57610a9a610a22565b5b6000610aa984828501610a70565b91505092915050565b6000819050919050565b610ac581610ab2565b82525050565b6000602082019050610ae06000830184610abc565b92915050565b610aef81610a47565b82525050565b6000602082019050610b0a6000830184610ae6565b92915050565b6000819050919050565b6000610b35610b30610b2b84610a27565b610b10565b610a27565b9050919050565b6000610b4782610b1a565b9050919050565b6000610b5982610b3c565b9050919050565b610b6981610b4e565b82525050565b6000602082019050610b846000830184610b60565b92915050565b610b9381610ab2565b8114610b9e57600080fd5b50565b600081359050610bb081610b8a565b92915050565b600060208284031215610bcc57610bcb610a22565b5b6000610bda84828501610ba1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4c82610ab2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7f57610c7e610c12565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cd4600083610cb9565b9150610cdf82610cc4565b600082019050919050565b6000610cf582610cc7565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d46600b83610cff565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610db2601283610cff565b9150610dbd82610d7c565b602082019050919050565b60006020820190508181036000830152610de181610da5565b9050919050565b6000610df382610ab2565b9150610dfe83610ab2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3757610e36610c12565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7c82610ab2565b9150610e8783610ab2565b925082610e9757610e96610e42565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ec181610ea2565b8114610ecc57600080fd5b50565b600081519050610ede81610eb8565b92915050565b6000819050919050565b610ef781610ee4565b8114610f0257600080fd5b50565b600081519050610f1481610eee565b92915050565b600081519050610f2981610b8a565b92915050565b600080600080600060a08688031215610f4b57610f4a610a22565b5b6000610f5988828901610ecf565b9550506020610f6a88828901610f05565b9450506040610f7b88828901610f1a565b9350506060610f8c88828901610f1a565b9250506080610f9d88828901610ecf565b9150509295509295909350565b6000610fb582610ee4565b9150610fc083610ee4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fff57610ffe610c12565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103c5761103b610c12565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107957611078610c12565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110b6576110b5610c12565b5b82820290509291505056fea2646970667358221220ef441b3669c8b4174fa91f29c2d7c1f21174dcb5ed57f5bd1f27d608200ee31464736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a85565b610199565b6040516100b49190610acb565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610443565b6040516100e99190610acb565b60405180910390f35b3480156100fe57600080fd5b50610107610450565b6040516101149190610af5565b60405180910390f35b34801561012957600080fd5b50610132610478565b60405161013f9190610b6f565b60405180910390f35b6101506104a1565b005b61015a6105c8565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bb6565b610857565b6040516101909190610af5565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103135760006001828154811061028d5761028c610be3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030b90610c41565b91505061026a565b50600067ffffffffffffffff81111561032f5761032e610c8a565b5b60405190808252806020026020018201604052801561035d5781602001602082028036833780820191505090505b506001908051906020019061037392919061097b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103ba90610cea565b60006040518083038185875af1925050503d80600081146103f7576040519150601f19603f3d011682016040523d82523d6000602084013e6103fc565b606091505b5050905080610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790610d5c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104de60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089f90919063ffffffff16565b101561051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610dc8565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610687575b5050505050905060005b815181101561075c5760008282815181106106f9576106f8610be3565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075490610c41565b9150506106db565b50600067ffffffffffffffff81111561077857610777610c8a565b5b6040519080825280602002602001820160405280156107a65781602001602082028036833780820191505090505b50600190805190602001906107bc92919061097b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080390610cea565b60006040518083038185875af1925050503d8060008114610840576040519150601f19603f3d011682016040523d82523d6000602084013e610845565b606091505b505090508061085357600080fd5b5050565b60006001828154811061086d5761086c610be3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ab836108db565b90506000670de0b6b3a764000085836108c49190610de8565b6108ce9190610e71565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092457600080fd5b505afa158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190610f2f565b5050509150506402540be400816109739190610faa565b915050919050565b8280548282559060005260206000209081019282156109f4579160200282015b828111156109f35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099b565b5b509050610a019190610a05565b5090565b5b80821115610a1e576000816000905550600101610a06565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5282610a27565b9050919050565b610a6281610a47565b8114610a6d57600080fd5b50565b600081359050610a7f81610a59565b92915050565b600060208284031215610a9b57610a9a610a22565b5b6000610aa984828501610a70565b91505092915050565b6000819050919050565b610ac581610ab2565b82525050565b6000602082019050610ae06000830184610abc565b92915050565b610aef81610a47565b82525050565b6000602082019050610b0a6000830184610ae6565b92915050565b6000819050919050565b6000610b35610b30610b2b84610a27565b610b10565b610a27565b9050919050565b6000610b4782610b1a565b9050919050565b6000610b5982610b3c565b9050919050565b610b6981610b4e565b82525050565b6000602082019050610b846000830184610b60565b92915050565b610b9381610ab2565b8114610b9e57600080fd5b50565b600081359050610bb081610b8a565b92915050565b600060208284031215610bcc57610bcb610a22565b5b6000610bda84828501610ba1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4c82610ab2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7f57610c7e610c12565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cd4600083610cb9565b9150610cdf82610cc4565b600082019050919050565b6000610cf582610cc7565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d46600b83610cff565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610db2601283610cff565b9150610dbd82610d7c565b602082019050919050565b60006020820190508181036000830152610de181610da5565b9050919050565b6000610df382610ab2565b9150610dfe83610ab2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3757610e36610c12565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7c82610ab2565b9150610e8783610ab2565b925082610e9757610e96610e42565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ec181610ea2565b8114610ecc57600080fd5b50565b600081519050610ede81610eb8565b92915050565b6000819050919050565b610ef781610ee4565b8114610f0257600080fd5b50565b600081519050610f1481610eee565b92915050565b600081519050610f2981610b8a565b92915050565b600080600080600060a08688031215610f4b57610f4a610a22565b5b6000610f5988828901610ecf565b9550506020610f6a88828901610f05565b9450506040610f7b88828901610f1a565b9350506060610f8c88828901610f1a565b9250506080610f9d88828901610ecf565b9150509295509295909350565b6000610fb582610ee4565b9150610fc083610ee4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fff57610ffe610c12565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103c5761103b610c12565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107957611078610c12565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110b6576110b5610c12565b5b82820290509291505056fea2646970667358221220ef441b3669c8b4174fa91f29c2d7c1f21174dcb5ed57f5bd1f27d608200ee31464736f6c63430008080033",
  "devdoc": {
    "author": "RR Mendoza",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}